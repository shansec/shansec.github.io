<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>大前端 on 飞雪无情的博客</title>
    <link>https://shansec.github.io/categories/%E5%A4%A7%E5%89%8D%E7%AB%AF/</link>
    <description>Recent content in 大前端 on 飞雪无情的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 14 Apr 2023 10:33:36 +0000</lastBuildDate><atom:link href="https://shansec.github.io/categories/%E5%A4%A7%E5%89%8D%E7%AB%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript 中如何判断变量是否为数字</title>
      <link>https://shansec.github.io/blog/JavaScript-%E4%B8%AD%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E5%8F%98%E9%87%8F%E6%98%AF%E5%90%A6%E4%B8%BA%E6%95%B0%E5%AD%97/</link>
      <pubDate>Fri, 14 Apr 2023 10:33:36 +0000</pubDate>
      
      <guid>https://shansec.github.io/blog/JavaScript-%E4%B8%AD%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E5%8F%98%E9%87%8F%E6%98%AF%E5%90%A6%E4%B8%BA%E6%95%B0%E5%AD%97/</guid>
      <description>简介 JavaScript 是一种动态类型语言，这意味着解释器在运行时确定变量的类型。实际上，这也允许我们在相同的代码中使用相同的变量来存储不同类型的数据。如果没有文档和一致性，我们在使用代码时并不总是知道变量的类型。 当我们期望一个变量是数字时，对字符串或数组进行操作可能会在代码中导致奇怪的结果。在本</description>
    </item>
    
    <item>
      <title>Vue3开发踩坑</title>
      <link>https://shansec.github.io/blog/Vue3%E5%BC%80%E5%8F%91%E8%B8%A9%E5%9D%91/</link>
      <pubDate>Fri, 24 Mar 2023 09:45:47 +0000</pubDate>
      
      <guid>https://shansec.github.io/blog/Vue3%E5%BC%80%E5%8F%91%E8%B8%A9%E5%9D%91/</guid>
      <description>期待了很久的vue3，一发布就上手体验了一把，这里记录几个自己碰到的网上不常见的小坑~ 自定义全局参数 定义： 1 2 3 4 // main.js const app = createApp(App) app.config.globalProperties.$test = &amp;#39;test&amp;#39; 除了setup()需要先获得实例，其他地方可以直接通过$test使用： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 &amp;lt;tempalte&amp;gt; &amp;lt;div&amp;gt;{{ $test }}&amp;lt;/div&amp;gt; &amp;lt;/tempalte&amp;gt; &amp;lt;script&amp;gt; import { getCurrentInstance } from &amp;#39;vue&amp;#39; export default { setup() { const test = getCurrentInstance()?.appContext.config.globalProperties.$test console.log(&amp;#39;test===&amp;#39;) console.log(test) }, }</description>
    </item>
    
    <item>
      <title>谈谈我对 path.resolve 的理解</title>
      <link>https://shansec.github.io/blog/%E8%B0%88%E8%B0%88%E6%88%91%E5%AF%B9path-resolve%E7%9A%84%E7%90%86%E8%A7%A3/</link>
      <pubDate>Wed, 22 Mar 2023 10:39:46 +0000</pubDate>
      
      <guid>https://shansec.github.io/blog/%E8%B0%88%E8%B0%88%E6%88%91%E5%AF%B9path-resolve%E7%9A%84%E7%90%86%E8%A7%A3/</guid>
      <description>前言 前一段时间在阅读源码的时候，遇到了path.resolve()，经过请教，终于知道了这个方法的作用。这边文章用来记录自己的使用心得。 正文 path.resolve() 作用：path.resolve() 该方法将一些的 路径/路径段 解析为绝对路径。 语法：path.resolve( [from…],to )。 说明：</description>
    </item>
    
    <item>
      <title>七个 Vue 项目用得上的 JavaScript 库分享</title>
      <link>https://shansec.github.io/blog/%E4%B8%83%E4%B8%AA-Vue-%E9%A1%B9%E7%9B%AE%E7%94%A8%E5%BE%97%E4%B8%8A%E7%9A%84-JavaScript-%E5%BA%93%E5%88%86%E4%BA%AB/</link>
      <pubDate>Wed, 22 Mar 2023 10:37:34 +0000</pubDate>
      
      <guid>https://shansec.github.io/blog/%E4%B8%83%E4%B8%AA-Vue-%E9%A1%B9%E7%9B%AE%E7%94%A8%E5%BE%97%E4%B8%8A%E7%9A%84-JavaScript-%E5%BA%93%E5%88%86%E4%BA%AB/</guid>
      <description>前言 借助开源库加速 Vue 项目的开发进度是现代前端开发比较常见的方式，平常收集一些 JavaScript 库介绍，在遇到需要的时候可以信手拈来。Vue 生态有很多不错的依赖库或者组件，是使用 Vue 开发前端的原因之一。接下来将会介绍七个 Vue 项目中会用到的 JavaScript 库。 一、vueuse 这是 GitHub 上星最多的库之一，拥有超过 12.8k 颗星，这</description>
    </item>
    
    <item>
      <title>盘点一些惊艳一时的 CSS 属性</title>
      <link>https://shansec.github.io/blog/%E7%9B%98%E7%82%B9%E4%B8%80%E4%BA%9B%E6%83%8A%E8%89%B3%E4%B8%80%E6%97%B6%E7%9A%84-CSS-%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Wed, 22 Mar 2023 10:28:10 +0000</pubDate>
      
      <guid>https://shansec.github.io/blog/%E7%9B%98%E7%82%B9%E4%B8%80%E4%BA%9B%E6%83%8A%E8%89%B3%E4%B8%80%E6%97%B6%E7%9A%84-CSS-%E5%B1%9E%E6%80%A7/</guid>
      <description>前言 随着前端的不断发展，更多新的 CSS 属性不断加入提案，本文列举 5 个不常用但很有用且你见过也可能没见过的 CSS 属性，带大家领略 CSS 之美。 一、position: sticky 不知道大家平时业务开发中有没有碰到这样的需求：标题在滚动的时候，会一直贴着最顶上。这种场景实际上很多：比如表格的标题栏、网站的导航</description>
    </item>
    
  </channel>
</rss>
