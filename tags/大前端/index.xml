<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>大前端 on 未来可期的博客</title>
    <link>http://shansec.github.io/tags/%E5%A4%A7%E5%89%8D%E7%AB%AF/</link>
    <description>Recent content in 大前端 on 未来可期的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 24 Mar 2023 09:45:47 +0000</lastBuildDate><atom:link href="http://shansec.github.io/tags/%E5%A4%A7%E5%89%8D%E7%AB%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vue3开发踩坑</title>
      <link>http://shansec.github.io/blog/Vue3%E5%BC%80%E5%8F%91%E8%B8%A9%E5%9D%91/</link>
      <pubDate>Fri, 24 Mar 2023 09:45:47 +0000</pubDate>
      
      <guid>http://shansec.github.io/blog/Vue3%E5%BC%80%E5%8F%91%E8%B8%A9%E5%9D%91/</guid>
      <description>期待了很久的vue3，一发布就上手体验了一把，这里记录几个自己碰到的网上不常见的小坑~ 自定义全局参数 定义： 1 2 3 4 // main.js const app = createApp(App) app.config.globalProperties.$test = &amp;#39;test&amp;#39; 除了setup()需要先获得实例，其他地方可以直接通过$test使用： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 &amp;lt;tempalte&amp;gt; &amp;lt;div&amp;gt;{{ $test }}&amp;lt;/div&amp;gt; &amp;lt;/tempalte&amp;gt; &amp;lt;script&amp;gt; import { getCurrentInstance } from &amp;#39;vue&amp;#39; export default { setup() { const test = getCurrentInstance()?.appContext.config.globalProperties.$test console.log(&amp;#39;test===&amp;#39;) console.log(test) }, }</description>
    </item>
    
    <item>
      <title>微信小程序picker组件遇到的问题以及解决办法</title>
      <link>http://shansec.github.io/blog/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fpicker%E7%BB%84%E4%BB%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Wed, 22 Mar 2023 10:45:38 +0000</pubDate>
      
      <guid>http://shansec.github.io/blog/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fpicker%E7%BB%84%E4%BB%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>一、picker基本概念 先来看一下官方文档中picker的基本概念： 从底部弹起的滚动选择器，现支持三种选择器，通过mode来区分，分别是普通选择器，时间选择器，日期选择器，默认是普通选择器。 重要属性 range： 选取范围，数据类型为Array / Object Array，mode为 普通选择器 时，</description>
    </item>
    
    <item>
      <title>微信小程序自定义tabbar栏【中间突出样式】</title>
      <link>http://shansec.github.io/blog/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%87%AA%E5%AE%9A%E4%B9%89tabbar%E6%A0%8F%E4%B8%AD%E9%97%B4%E7%AA%81%E5%87%BA%E6%A0%B7%E5%BC%8F/</link>
      <pubDate>Wed, 22 Mar 2023 10:43:59 +0000</pubDate>
      
      <guid>http://shansec.github.io/blog/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%87%AA%E5%AE%9A%E4%B9%89tabbar%E6%A0%8F%E4%B8%AD%E9%97%B4%E7%AA%81%E5%87%BA%E6%A0%B7%E5%BC%8F/</guid>
      <description>前言 昨天主管突然给我说微信小程序默认的 tabBar 不美观，让我改成中间突出的那种样式。纵然我心里面有千般不情愿，但还是接下了这个任务。查了一下文档 自定义 tabBar 发现有这个方法，有思路了就赶紧搞起来，以下是我的开发经验分享。 一、自定义tabbar栏 配置 在 app.json 文件中的 tabBar 中指定 custom 字段为 true（意思是允</description>
    </item>
    
  </channel>
</rss>
